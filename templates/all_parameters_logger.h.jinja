/****************************************************************************
 *
 *   Copyright (C) 2025 UAV_LAB Development Team. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 * 3. Neither the name PX4 nor the names of its contributors may be
 *    used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
 * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
 * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 ****************************************************************************/

/**
 * @file all_parameters_logger.h
 * logs all parameters both local and global parameters based on the JSON file as input app for Linux
 *
 * @author Laxminarayana Vadnala <laxminarayana.vadnala@slu.edu>
 */

#pragma once

#include <px4_platform_common/app.h>
#include <px4_platform_common/module.h>
#include <px4_platform_common/module_params.h>
#include <uORB/Subscription.hpp>
#include <uORB/topics/parameter_update.h>
#include <uORB/topics/{{ message_file_name }}.h>
#include <parameters/param.h>

class AllParametersLogger : public ModuleBase<AllParametersLogger>, public ModuleParams
{
public:
    AllParametersLogger(): ModuleParams(nullptr)
    {

    {% for param_name, datatype in params.items() %}
    {%- set variable_param = param_name -%}
        _{{-variable_param.replace(".", "_")-}}_param = param_find("{{ param_name.upper() }}");
        param_get(_{{-variable_param.replace(".", "_")-}}_param, &_{{-variable_param.replace(".", "_")-}});
    {% endfor %}
    memset(&param_msg, 0, sizeof(param_msg));
    orb_advert_t param_pub = orb_advertise(ORB_ID({{ message_file_name }}), &param_msg);
    }

    ~AllParametersLogger() {}

    int main();
    struct {{ message_file_name }}_s param_msg;
    static px4::AppState appState; /* track requests to terminate app */

private:
    // Subscription to parameter updates
    uORB::Subscription _param_sub{ORB_ID(parameter_update)};

    // Parameters to monitor (from local_position_estimator)
    {% for param_name, datatype in params.items() %}
        {%- set variable_param = param_name -%}
            param_t _{{-variable_param.replace(".", "_")-}}_param;
        {% if datatype == "int32" %}
            {{ datatype }}_t _{{-variable_param.replace(".", "_")-}};
        {% else %}
            {{ datatype }} _{{-variable_param.replace(".", "_")-}};
        {% endif %}
    {% endfor %}

};